local cmp = require("cmp")

-- –ò–∫–æ–Ω–∫–∏ –¥–ª—è LSP CompletionItemKinds
local kind_icons = {
  Text = "Óòí",
  Method = "Û∞Üß",
  Function = "Û∞äï",
  Constructor = "Ôê£",
  Field = "Û∞áΩ",
  Variable = "Û∞Ç°",
  Class = "Û∞†±",
  Interface = "ÔÉ®",
  Module = "Ôíá",
  Property = "Û∞ú¢",
  Unit = "Óàü",
  Value = "Û∞é†",
  Enum = "ÔÖù",
  Keyword = "Û∞åã",
  Snippet = "Ôëè",
  Color = "Û∞èò",
  File = "Û∞àô",
  Reference = "Û∞àá",
  Folder = "Û∞âã",
  EnumMember = "ÔÖù",
  Constant = "Û∞èø",
  Struct = "Û∞ôÖ",
  Event = "ÔÉß",
  Operator = "Û∞Üï",
  TypeParameter = "Ó™í",
}

cmp.setup({
  formatting = {
    fields = { "kind", "abbr", "menu" },
    format = function(entry, vim_item)
      -- –¥–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É
      vim_item.kind = string.format("%s %s", kind_icons[vim_item.kind] or "", vim_item.kind)

      -- –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–æ–¥—Å–∫–∞–∑–∫–∏ (–º–µ–Ω—é —Å–ø—Ä–∞–≤–∞)
      vim_item.menu = ({
        nvim_lsp = "[LSP]",
        buffer = "[Buf]",
        path = "[Path]",
        luasnip = "[Snip]",
      })[entry.source.name]

      return vim_item
    end,
  },

  mapping = cmp.mapping.preset.insert({
    ["<C-Space>"] = cmp.mapping.complete(),
    ["<CR>"] = cmp.mapping.confirm({ select = true }),
    ["<Tab>"] = cmp.mapping.select_next_item(),
    ["<S-Tab>"] = cmp.mapping.select_prev_item(),
  }),

  sources = cmp.config.sources({
    { name = "nvim_lsp" },
    { name = "luasnip" },
    { name = "buffer" },
    { name = "path" },
  }),

  experimental = {
    ghost_text = true,
  },

  window = {
    completion = cmp.config.window.bordered({
      winhighlight = "Normal:Pmenu,FloatBorder:Pmenu,Search:None",
      max_height = 10, -- üëà –º–∞–∫—Å–∏–º—É–º 10 —Å—Ç—Ä–æ–∫, –¥–∞–ª—å—à–µ —Å–∫—Ä–æ–ª–ª
      max_width = 60,  -- üëà –æ–≥—Ä–∞–Ω–∏—á–∏–º —à–∏—Ä–∏–Ω—É, —á—Ç–æ–±—ã –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–ª –ø–æ–ª —ç–∫—Ä–∞–Ω–∞
    }),
    documentation = cmp.config.window.bordered(),
  },
})
